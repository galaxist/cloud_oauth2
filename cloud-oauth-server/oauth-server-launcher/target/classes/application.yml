server:
  port: 18081

spring:
  application:
    name: oauth-server   # 应用名称

  jpa:
      open-in-view: true
      database: POSTGRESQL
      show-sql: true
      hibernate:
        ddl-auto: update
        dialect: org.hibernate.dialect.PostgreSQLDialect
      properties:
        hibernate:
          temp:
            use_jdbc_metadata_defaults: false

  # 数据源 配置
  datasource:
      platform: postgres
      url: jdbc:postgresql://101.132.136.225:5432/cloud_oauth2?useUnicode=true&characterEncoding=utf-8
      username: postgres
      password: postgres123
      driver-class-name: org.postgresql.Driver

  # redis 配置
  redis:
    host: 101.132.136.225
    port: 6379
    password:
    database: 0
    jedis:
      pool:
        #最大连接数
        max-active: 8
        #最大空闲
        max-idle: 8
        #最大阻塞等待时间(负数表示没限制)
        max-wait: -1ms
        #最小空闲
        min-idle: 0
    #连接超时时间
    timeout: 1000ms



# JWT 配置
jwt:
  # 存放Token的Header Key
  header: Authorization
  # 密匙key
  secret: mySecret
  # 过期时间   单位秒 7天后过期  604800
  expiration: 3600
  # 自定义token 前缀字符
  tokenHead: Bearer-
  # 超时时间   单位秒
  access_token: 3600
  # 刷新token时间   单位秒
  refresh_token: 3600
  route:
    authentication:
      path: login/entry
      refresh: oauth/refresh
      register: login/account


# 配置不需要认证的接口
com:
  example:
    oauth:
      security:
        antMatchers:
          /,
          /auth/v1/api/login/**,
          /auth/v1/api/module/tree/**,
          /auth/v1/api/grid/**,
          /error


# 日志
logging:
  level:
    org:
      springframework:
        security: DEBUG